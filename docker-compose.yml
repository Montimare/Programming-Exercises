services:
  frontend:
    container_name: frontend
    build: ./Frontend/my-app
    restart: unless-stopped
    volumes:
      - ./Frontend/my-app:/frontend-dev
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - progex-frontend
    # depends_on:
    #   - backend
  # was das?????????????????
    stdin_open: true
    tty: true

  backend:
    container_name: backend
    build: ./Backend
    restart: always
    volumes:
      - ./Backend:/backend-dev
    ports:
      - "8000:8000"
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
    networks:
      - progex-database
      - progex-frontend
      # - default
    depends_on:
      - database
  # was das?????????????????
  #   stdin_open: true
  #   tty: true

  database:
    container_name: database
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: calendar_app
    ports:
      - "3306:3306"
    networks:
      - progex-database
    volumes:
      - /mnt/hdd1/progex:/var/lib/mysql
    healthcheck:
      # test: ["CMD", "root", "ping", "-h", "localhost"]
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      interval: 10s
      retries: 50

networks:
  progex-database:
    driver: bridge
  progex-frontend:
    driver: bridge

# volumes:
#   mysql-data:
