# Generated by Django 5.0.4 on 2024-06-24 11:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='Database.eventlist')),
            ],
        ),
        migrations.CreateModel(
            name='Group_EventList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Database.eventlist')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Database.group')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='event_lists',
            field=models.ManyToManyField(through='Database.Group_EventList', to='Database.eventlist'),
        ),
        migrations.AddField(
            model_name='eventlist',
            name='groups',
            field=models.ManyToManyField(through='Database.Group_EventList', to='Database.group'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='Database.event')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='admin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_group', to='Database.user'),
        ),
        migrations.AddField(
            model_name='eventlist',
            name='admin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Database.user'),
        ),
        migrations.CreateModel(
            name='User_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Database.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Database.user')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(through='Database.User_Group', to='Database.group'),
        ),
        migrations.AddField(
            model_name='group',
            name='users',
            field=models.ManyToManyField(through='Database.User_Group', to='Database.user'),
        ),
    ]
